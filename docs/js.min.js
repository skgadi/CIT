function getNumFromText(e){var a;try{return a=math.evaluate(e),math.isNumeric(a)?a:NaN}catch(e){return NaN}}function updateMathJax(){MathJax.Hub.Queue(["Typeset",MathJax.Hub])}var lang={en:{name:"English",appName:"CIT",appFName:"Control and Identification Toolbox",algorithms:{sResponse:{name:"System response",documentation:"ol-system.pdf",fGens:{u:{name:"Input to the system, $u(t)$"}},inputs:{in:"System output, $y(t)$"},outputs:{out:"System input, $u(t)$"}},pid:{name:"PID controller",documentation:"pid.pdf",params:{"k-p":{name:"Proportional constant, $K_P$",dValue:10,min:-1/0,max:1/0},"k-i":{name:"Integral constant, $K_I$",dValue:1,min:-1/0,max:1/0},"k-d":{name:"Derivative constant, $K_D$",dValue:0,min:-1/0,max:1/0}},fGens:{u:{name:"Reference, $r(t)$"}},inputs:{in:"System output, $y(t)$"},outputs:{out:"Control signal, $u(t)$"}}},mTabs:{mModel:"Mathematical model",bridgeDevice:"Bridge device configuration",params:"Simulation parameters",fGens:"Function generator(s)",graphs:"Graphs",errors:"Errors"},bridge:{iTypeName:"Input type",iTypes:{analog:"Analog voltage",encoder:"Encoder",temp:"Temperature sensor",humidity:"Humidity sensor",current:"Aanalog current",light:"Light sensor"},oTypeName:"Output type",oTypes:{dc0:"Pulsed DC voltage out Ch00",dc1:"Pulsed DC voltage out Ch01",ac0:"Pulsed AC voltage out Ch00",ac1:"Pulsed AC voltage out Ch01"}},offset:"Offset",gain:"Gain",aSelection:"Algorithm selection",noParams:"Parameters are unavailable for the selected algorithm.",fGens:{params:{amp:{name:"Amplitude",val:1,min:0,max:1/0},freq:{name:"Frequency",val:1,min:0,max:1/0},duty:{name:"Duty  cycle",val:50,min:0,max:100},phase:{name:"Phase",val:0,min:-360,max:360},offset:{name:"Offset",val:0,min:-1/0,max:1/0},start:{name:"Start at",val:0,min:0,max:1/0}},iSignal:"Invert signal",sTypes:{step:{name:"Step function",params:["amp","offset"]},sine:{name:"Sine wave",params:["amp","freq","phase","offset"]},triangle:{name:"Triangular wave",params:["amp","freq","phase","offset"]},sawtooth:{name:"Sawtooth wave",params:["amp","freq","phase","offset"]},rect:{name:"Rectangular wave",params:["amp","freq","phase","duty","offset"]}},sType:"Signal type"},errors:{uENFound:"No error found in the data entered by user.",uEFound:"Error: following values entered by the user are wrong.",sec:"Section",sSec:"Subsection",uVal:"Value entered",min:"Minimum",max:"Maximum"}},es:{name:"Español",appName:"CIT",appFName:"Caja de herramientas de control e identificación",algorithms:{sResponse:{name:"Respuesta del sistema",documentation:"ol-system.pdf",fGens:{u:{name:"Entrada al sistema, $u(t)$"}},inputs:{in:"Salida del sistema, $y(t)$"},outputs:{out:"Entrada del sistema, $u(t)$"}},pid:{name:"Controlador PID",documentation:"pid.pdf",params:{"k-p":{name:"Constante proporcional, $K_P$",dValue:10,min:-1/0,max:1/0},"k-i":{name:"Constante integral, $K_I$",dValue:1,min:-1/0,max:1/0},"k-d":{name:"Constante derivada, $K_D$",dValue:0,min:-1/0,max:1/0}},fGens:{u:{name:"Referencia, $r(t)$"}},inputs:{in:"Salida del sistema, $y(t)$"},outputs:{out:"Siñal de control, $u(t)$"}}},mTabs:{mModel:"Modelo matemático",bridgeDevice:"Configuración del dispositivo puente",params:"Parámetros de simulación",fGens:"Generador(es) de funciones",graphs:"Gráficos",errors:"Errores"},bridge:{iTypeName:"Tipo de entrada",iTypes:{analog:"Voltaje análogo",encoder:"Codificador",temp:"Sensor de temperatura",humidity:"Sensor de humedad",current:"Aanalog actual",light:"Sensor de luz"},oTypeName:"Tipo de salida",oTypes:{dc0:"Saluda de tensión DC pulsada Ch00",dc1:"Saluda de tensión DC pulsada Ch01",ac0:"Saluda de tensión AC pulsada Ch00",ac1:"Saluda de tensión AC pulsada Ch01"}},offset:"Offset",gain:"Ganancia",aSelection:"Selección de algoritmo",noParams:"Los parámetros no están disponibles para el algoritmo seleccionado.",fGens:{params:{amp:{name:"Amplitude",val:1,min:0,max:1/0},freq:{name:"Frequency",val:1,min:0,max:1/0},duty:{name:"Duty  cycle",val:50,min:0,max:100},phase:{name:"Fase",val:0,min:-360,max:360},offset:{name:"Offset",val:0,min:-1/0,max:1/0},start:{name:"Start at",val:0,min:0,max:1/0}},iSignal:"Invert signal",sTypes:{step:{name:"Step function",params:["amp","offset"]},sine:{name:"Sine wave",params:["amp","freq","phase","offset"]},triangle:{name:"Triangular wave",params:["amp","freq","phase","offset"]},sawtooth:{name:"Sawtooth wave",params:["amp","freq","phase","offset"]},rect:{name:"Rectangular wave",params:["amp","freq","phase","duty","offset"]}},sType:"Signal type"},errors:{uENFound:"No se encontraron errores en los datos ingresados por el usuario.",uEFound:"Error: los siguientes valores ingresados por el usuario son incorrectos.",sec:"Sección",sSec:"Subsección",uVal:"Valor ingresado",min:"Mínimo",max:"Máximo"}}};String.prototype.replaceAll_1=function(e,a){var t=this;return t.replace(new RegExp(e,"g"),a)},String.prototype.replaceAll_2=function(e,a){var t=this;return t.split(e).join(a)};var app=new Vue({el:"#app",data:{lang:lang,sLang:"en",sAlgorithm:"",display:{mModel:!1,bridgeDevice:!1,params:!1,fGens:!1,graphs:!1,errors:!1},sInputs:{},iGains:{},iOffsets:{},sOutputs:{},oGains:{},oOffsets:{},params:{},fGens:{},errors:[],defaults:{sInputs:"analog",iGains:1,iOffsets:0,sOutputs:"dc0",oGains:1,oOffsets:0}},watch:{sAlgorithm:{deep:!0,handler:function(){this.validateInputs()}},sLang:function(){},oGains:{deep:!0,handler:function(){this.validateInputs()}},oOffsets:{deep:!0,handler:function(){this.validateInputs()}},iGains:{deep:!0,handler:function(){this.validateInputs()}},iOffsets:{deep:!0,handler:function(){this.validateInputs()}},params:{deep:!0,handler:function(){this.validateInputs()}},fGens:{deep:!0,handler:function(){this.validateInputs()}}},beforeMount:function(){this.$set(this,"sAlgorithm","sResponse")},mounted:function(){document.getElementById("loading").style.display="none",document.getElementById("app").style.display="block"},updated:function(){this.resetInvalidsToDefault(),updateMathJax()},computed:{cLang:function(){return this.lang[this.sLang]},mModel:function(){return`<iframe src='https://docs.google.com/gview?url=https://cit.skgadi.com/m-models/${this.cLang.algorithms[this.sAlgorithm].documentation}&embedded=true' style='width:100%; height:300px;' frameborder='0'></iframe>`}},methods:{clearErrors:function(){this.$set(this,"errors",[])},validateInputs:function(){this.clearErrors();for(var e=document.getElementsByClassName("errValidation"),a=0;a<e.length;a++){var t,s,n,i=e[a],r=!1;t=getNumFromText(i.value),s=math.evaluate(i.getAttribute("min")),n=math.evaluate(i.getAttribute("max")),isNaN(t)?r=!0:math.abs(t)===1/0?r=!0:NaN!==s&&t<s?r=!0:NaN!==n&&t>n&&(r=!0),r?(this.errors.push({mTab:i.getAttribute("mTab"),sID:i.getAttribute("sID"),val:i.value,min:"$"+math.parse(s).toTex().replaceAll_1("Infinity","\\infty")+"$",max:"$"+math.parse(n).toTex().replaceAll_1("Infinity","\\infty")+"$"}),i.classList.add("w3-red")):i.classList.remove("w3-red")}},resetInvalidsToDefault:function(){for(var e=Object.keys(this.cLang.algorithms[this.sAlgorithm].inputs),a=["sInputs","iOffsets","iGains"],t=0;t<e.length;t++)for(var s=e[t],n=0;n<a.length;n++){var i=a[n];if(void 0===this[i][s])return this.$set(this[i],s,this.defaults[i]),void this.$nextTick(this.validateInputs)}e=Object.keys(this.cLang.algorithms[this.sAlgorithm].outputs),a=["sOutputs","oOffsets","oGains"];for(t=0;t<e.length;t++)for(s=e[t],n=0;n<a.length;n++){i=a[n];if(void 0===this[i][s])return this.$set(this[i],s,this.defaults[i]),void this.$nextTick(this.validateInputs)}if(this.cLang.algorithms[this.sAlgorithm].params){e=Object.keys(this.cLang.algorithms[this.sAlgorithm].params);for(t=0;t<e.length;t++){s=e[t];if(void 0===this.params[s])return this.$set(this.params,s,this.cLang.algorithms[this.sAlgorithm].params[s].dValue),void this.$nextTick(this.validateInputs)}}if(this.cLang.algorithms[this.sAlgorithm].fGens){e=Object.keys(this.cLang.algorithms[this.sAlgorithm].fGens);for(t=0;t<e.length;t++){s=e[t];if(void 0===this.fGens[s])return this.$set(this.fGens,s,[{sType:"step",params:{},iSignal:!1}]),void this.$nextTick(this.validateInputs);for(t=0;t<this.fGens[s].length;t++){var r=this.fGens[s][t].sType;console.log(r);for(n=0;n<this.cLang.fGens.sTypes[r].params.length;n++){var o=this.cLang.fGens.sTypes[r].params[n];if(void 0===this.fGens[s][t].params[o])return this.$set(this.fGens[s][t].params,o,this.cLang.fGens.params[o]),this.$set(this.fGens[s][t].params,o,this.cLang.fGens.params[o]),void this.$nextTick(this.validateInputs)}var m=Object.keys(this.fGens[s][t].params);for(n=0;n<m.length;n++)if(this.cLang.fGens.sTypes[r].params.indexOf(m[n])<0)return this.$delete(this.fGens[s][t].params,m[n]),void this.$nextTick(this.validateInputs)}}}}}});MathJax.Hub.Config({showMathMenu:!1,messageStyle:"none",menuSettings:{inTabOrder:!1},extensions:["tex2jax.js"],jax:["input/TeX","output/HTML-CSS"],tex2jax:{preview:"none",inlineMath:[["$","$"],["\\(","\\)"]],displayMath:[["$$","$$"],["\\[","\\]"]]}});