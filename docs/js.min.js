function updateMathJax(){MathJax.Hub.Queue(["Typeset",MathJax.Hub])}var lang={en:{name:"English",appName:"CIT",appFName:"Control and Identification Toolbox",algorithms:{sResponse:{name:"System response",diagram:"openloop.png",inputs:{in:"System output, $y(t)$"},outputs:{out:"System input, $u(t)$"}},pid:{name:"PID controller",diagram:"pid.png",inputs:{in:"System output, $y(t)$"},outputs:{out:"Control signal, $u(t)$"}}},mTabs:{mModel:"Mathematical model",bridgeDevice:"Bridge device configuration",params:"Simulation parameters",graphs:"Graphs"},bridge:{iTypeName:"Input type",iTypes:{analog:"Analog voltage",encoder:"Encoder",temp:"Temperature sensor",humidity:"Humidity sensor",current:"Aanalog current",light:"Light sensor"},oTypeName:"Output type",oTypes:{dc0:"Pulsed DC voltage out Ch00",dc1:"Pulsed DC voltage out Ch01",ac0:"Pulsed AC voltage out Ch00",ac1:"Pulsed AC voltage out Ch01"}},offset:"Offset",gain:"Gain"},es:{name:"Español",appName:"CIT",appFName:"Caja de herramientas de control e identificación",algorithms:{sResponse:{name:"Respuesta del sistema",diagram:"openloop.png",inputs:{in:"Salida del sistema, $y(t)$"},outputs:{out:"Entrada del sistema, $u(t)$"}},pid:{name:"Controlador PID",diagram:"pid.png",inputs:{in:"Salida del sistema, $y(t)$"},outputs:{out:"Siñal de control, $u(t)$"}}},mTabs:{mModel:"Modelo matemático",bridgeDevice:"Configuración del dispositivo puente",params:"Parámetros de simulación",graphs:"Gráficos"},bridge:{iTypeName:"Tipo de entrada",iTypes:{analog:"Voltaje análogo",encoder:"Codificador",temp:"Sensor de temperatura",humidity:"Sensor de humedad",current:"Aanalog actual",light:"Sensor de luz"},oTypeName:"Tipo de salida",oTypes:{dc0:"Saluda de tensión DC pulsada Ch00",dc1:"Saluda de tensión DC pulsada Ch01",ac0:"Saluda de tensión AC pulsada Ch00",ac1:"Saluda de tensión AC pulsada Ch01"}},offset:"Offset",gain:"Ganancia"}},app=new Vue({el:"#app",data:{lang:lang,sLang:"en",sAlgorithm:"sResponse",display:{diagram:!1,bridgeDevice:!1,params:!1,graphs:!1},sInputs:{},iGains:{},iOffsets:{},sOutputs:{},oGains:{},oOffsets:{},defaults:{sInputs:"analog",iGains:1,iOffsets:0,sOutputs:"dc0",oGains:1,oOffsets:0}},watch:{sAlgorithm:function(){},sLang:function(){}},mounted:function(){document.getElementById("loading").style.display="none",document.getElementById("app").style.display="block"},updated:function(){this.resetInvalidsToDefault(),updateMathJax()},computed:{cLang:function(){return this.lang[this.sLang]}},methods:{resetInvalidsToDefault:function(){Object.keys(this.cLang.algorithms[this.sAlgorithm].inputs).forEach(a=>{void 0===app.$data.sInputs[a]&&app.$set(app.$data.sInputs,a,app.$data.defaults.sInputs),void 0===app.$data.iOffsets[a]&&app.$set(app.$data.iOffsets,a,app.$data.defaults.iOffsets),void 0===app.$data.iGains[a]&&app.$set(app.$data.iGains,a,app.$data.defaults.iGains)}),Object.keys(this.cLang.algorithms[this.sAlgorithm].outputs).forEach(a=>{app.$data.sOutputs[a]||app.$set(app.$data.sOutputs,a,app.$data.defaults.sOutputs),void 0===app.$data.oOffsets[a]&&app.$set(app.$data.oOffsets,a,app.$data.defaults.oOffsets),void 0===app.$data.oGains[a]&&app.$set(app.$data.oGains,a,app.$data.defaults.oGains)}),Object.keys(app.$data.defaults).forEach(function(a){Object.keys(app.$data[a]).forEach(function(t){app.$data[a][t]||app.$set(app.$data[a],t,app.$data.defaults[a])})})}}});MathJax.Hub.Config({showMathMenu:!1,messageStyle:"none",menuSettings:{inTabOrder:!1},extensions:["tex2jax.js"],jax:["input/TeX","output/HTML-CSS"],tex2jax:{preview:"none",inlineMath:[["$","$"],["\\(","\\)"]],displayMath:[["$$","$$"],["\\[","\\]"]]}});